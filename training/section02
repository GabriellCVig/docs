=================

`Prologue 1 <#prologue>`__

`Table of Contents 2 <#_Toc64461657>`__

`1. Architecture and Concepts 6 <#architecture-and-concepts>`__

`Introduction 6 <#introduction>`__

`Architecture 6 <#architecture>`__

`1.1 Architecture and Concepts: Beginner
6 <#architecture-and-concepts-beginner>`__

`1.1.1 Different types of Architectures
6 <#different-types-of-architectures-jonas>`__

`1.1.2 Datadriven architecture 7 <#data-driven-architecture-jonas>`__

`1.1.3 Datahub 7 <#datahub-jonas>`__

`1.1.4 Sesam “sesam-world-map”? 7 <#sesam-sesam-world-map>`__

`1.1.5 The parts of sesam 7 <#the-parts-of-sesam-erik>`__

`1.1.6 The Sesam portal 7 <#the-sesam-portal>`__

`1.1.7 Working language JSON 7 <#working-language-json>`__

`1.1.8 Namegiving conventions 7 <#naming-convention>`__

`1.1.9 Systems 7 <#systems-1>`__

`1.1.10 Pipes 7 <#pipes-1>`__

`1.1.11 Datasets 8 <#datasets>`__

`1.1.12 Datasets vs. tables 8 <#datasets-vs.-tables>`__

`1.1.13 Entities / JSON (Key-value pairs)
8 <#entities-json-key-value-pairs>`__

`1.1.14 Globals as a concept 8 <#globals-as-a-concept>`__

`1.1.15 Special sesam attributes 8 <#special-sesam-attributes>`__

`1.1 Tasks for Architecture and Concepts: Beginner
8 <#tasks-for-architecture-and-concepts-beginner>`__

`1.2 Architecture and Concepts: Novice
8 <#architecture-and-concepts-novice>`__

`1.2.16 Joining Data 8 <#joining-data>`__

`1.2.17 Make namespaced identifieries for foreign keys [Make-ni]
9 <#make-namespaced-for-foreign-keys-make-ni>`__

`1.2.18 Full Outer Join (Merge) 9 <#full-outer-join-merge>`__

`1.2.19 Left Join (Hops) 9 <#left-join-hops>`__

`1.2.20 Global 9 <#global>`__

`1.2.21 Generic input pipes, custom output pipes
9 <#generic-input-pipes-custom-output-pipes>`__

`1.2.22 Filter entities on the way out
9 <#filter-entities-on-the-way-out>`__

`1.2.23 Tag your entities - Categorization of sub-concepts
9 <#tag-your-entities---categorization-of-sub-concepts>`__

`1.2.24 Customize data structure for endpoints
9 <#customize-data-structure-for-endpoints>`__

`1.2.25 Change tracking & data delta 10 <#change-tracking-data-delta>`__

`1.2 Tasks for Architecture and Concepts: Novice
10 <#tasks-for-architecture-and-concepts-novice>`__

`1.3 Architecture and Concepts: Intermediate
10 <#architecture-and-concepts-intermediate>`__

`1.3.26 Hops 10 <#hops>`__

`1.3.27 1.3.26 Incremental Database queries
10 <#incremental-system-queries>`__

`1.3.28 Subset 10 <#subset>`__

`1.3.29 Dynamic, Static & Timeseries Data
10 <#dynamic-static-timeseries-data>`__

`1.3.30 When to use a microservice 10 <#when-to-use-a-microservice>`__

`1.3 Tasks for Architecture and Concepts: Intermediate
10 <#tasks-for-architecture-and-concepts-intermediate>`__

`1.4 Architecture and Concepts: Advanced
10 <#architecture-and-concepts-advanced>`__

`1.4.31 Choosing a source dataset for your pipe
10 <#choosing-a-source-dataset-for-your-pipe>`__

`1.4.32 Eventual Consistency 11 <#eventual-consistency>`__

`1.4.33 Create Child & Emit children 11 <#create-child-emit-children>`__

`1.4 Tasks for Architecture and Concepts: Advanced
11 <#tasks-for-architecture-and-concepts-advanced>`__

`Epilogue 11 <#epilogue>`__

`2 Systems 11 <#systems-2>`__

`Introduction 11 <#introduction-1>`__

`2.1 Systems: Beginner 11 <#systems-beginner>`__

`2.1.1 What is a system in Sesam? 11 <#what-is-a-system-in-sesam>`__

`2.1.2 Introduction to SQL & Json systems
11 <#introduction-to-sql-json-systems>`__

`2.1.3 Pipe interaction with systems.
11 <#pipe-interaction-with-systems.>`__

`2.1.4 How to create a system with Templates
11 <#how-to-create-a-system-with-templates>`__

`2.1.5 Environment variables & Secrets
11 <#environment-variables-secrets>`__

`2.1.6 JSON Push & Pull protocol 12 <#json-push-pull-protocol>`__

`2.1 Tasks for Systems: Beginner 12 <#tasks-for-systems-beginner>`__

`2.2 Systems: Novice 12 <#systems-novice>`__

`2.2.7 What is a system in Sesam? 12 <#what-is-a-system-in-sesam-1>`__

`2.2.8 Systems as a pipe source 12 <#systems-as-a-pipe-source>`__

`2.2.9 Systems as a pipe sink 12 <#systems-as-a-pipe-sink>`__

`2.2.10 [System?] Authentication methods
12 <#system-authentication-methods>`__

`2.2.11 System Types 12 <#system-types>`__

`2.2 Tasks for Systems: Novice 12 <#tasks-for-systems-novice>`__

`2.3 Systems: Intermediate 12 <#systems-intermediate>`__

`2.3.12 Microservice System 12 <#microservice-system>`__

`2.3.13 HTTP Transforms 13 <#http-transforms>`__

`2.3.14 Chaining of Systems 13 <#chaining-of-systems>`__

`2.3 Tasks for Systems: Intermediate
13 <#tasks-for-systems-intermediate>`__

`Epilogue 13 <#epilogue-1>`__

`3 DTL – The language of Pipes 14 <#dtl-the-language-of-pipes>`__

`Introduction 14 <#introduction-2>`__

`What is DTL? 14 <#what-is-dtl>`__

`Why DTL? 14 <#why-dtl>`__

`Where is DTL used? – Can fit into 3.1.1 probably.
14 <#where-is-dtl-used-can-fit-into-3.1.1-probably.>`__

`3.1 DTL: Beginner 14 <#dtl-beginner>`__

`3.1.1 Pipes, where DTL executes
14 <#pipes-where-dtl-executes-morten>`__

`3.1.2 Entities, pipes and \_id
14 <#entities-pipes-and-_id-geir-atle>`__

`3.1.3 Entity Data model – Data Types
14 <#entity-data-model-data-types-gabriell>`__

`3.1.4 Syntax 14 <#syntax>`__

`3.1.5 Bootstrap 15 <#dtl-in-practice>`__

`3.1.6 Pipe shortcuts 15 <#pipe-shortcuts>`__

`3.1 Tasks for DTL: Beginner 15 <#tasks-for-dtl-beginner>`__

`3.2 DTL: Novice 15 <#dtl-novice>`__

`3.2.7 “Copy” 15 <#copy>`__

`3.2.8 “Add” 16 <#add>`__

`3.2.9 “Concat” – Concatination 16 <#concat-concatination>`__

`3.2.10 rdf:type 16 <#rdftype>`__

`3.2.11 Namespace 16 <#namespace>`__

`3.2.12 “Make-ni” 16 <#make-ni>`__

`3.2.13 “Eq” – Equality 16 <#eq-equality>`__

`3.2.14 Merge as a Source 16 <#merge-as-a-source>`__

`3.2.15 Filter as a transform 16 <#filter-as-a-transform>`__

`3.2.16 Coalesce 16 <#coalesce>`__

`3.2.17 Nested dictionaries 16 <#nested-dictionaries>`__

`3.2.18 Apply – Custom Functions 16 <#apply-custom-functions>`__

`3.2.19 Merge as a function 17 <#merge-as-a-function>`__

`3.2.20 Hops 17 <#hops-1>`__

`3.2.21 \_ Properties 17 <#properties>`__

`3.2.22 Type examples 17 <#type-examples>`__

`3.2 Tasks for DTL: Novice 17 <#tasks-for-dtl-novice>`__

`3.3 DTL: Intermediate 18 <#dtl-intermediate>`__

`3.3.23 More on Pipes 18 <#more-on-pipes>`__

`3.3.24 Pipe Sink 18 <#pipe-sink>`__

`3.3.25 if 18 <#if>`__

`3.3.26 Case &? case-eq 18 <#case-case-eq>`__

`3.3.27 Multiple transforms 18 <#multiple-transforms>`__

`3.3.27 Dependency tracking in Hops 18 <#dependency-tracking-in-hops>`__

`3.3.28 "Apply-hops" 18 <#apply-hops>`__

`3.3.29 Source Subset 18 <#source-subset>`__

`3.3 Tasks for DTL: Intermediate 18 <#tasks-for-dtl-intermediate>`__

`3.4 DTL: Advanced 18 <#dtl-advanced>`__

`3.4.30 Filter as an expression 18 <#filter-as-an-expression>`__

`3.4.31 \_. Syntax and Functions 18 <#syntax-and-functions>`__

`3.4.32 Map 19 <#map>`__

`3.4.33 \_P & \_R – Parent & Root 19 <#p-_r-parent-root>`__

`3.4.34 “Create-child” 19 <#create-child>`__

`3.4.35 Recursion in Hops & Apply 19 <#recursion-in-hops-apply>`__

`3.4.36 Key-values 19 <#key-values>`__

`3.4.37 Escape Namespaced Identifiers [NI]
19 <#escape-namespaced-identifiers-ni>`__

`3.4 Tasks for DTL: Advanced 19 <#tasks-for-dtl-advanced>`__

`Epilogue 19 <#epilogue-2>`__

`Projects & Infrastructure 20 <#projects-infrastructure>`__

`Introduction 20 <#introduction-3>`__

`4.1 Projects & Infrastructure Beginner
20 <#projects-infrastructure-beginner>`__

`4.1.1 Portal GUI 20 <#portal-gui>`__

`4.1.2 sesam-CLI 20 <#sesam-cli>`__

`4.1.3 4.1.3 Testing & Testdata 21 <#testing-testdata>`__

`4.1.4 Dokumentasjon 22 <#dokumentasjon>`__

`4.1.5 JWT/Authentisering 22 <#jwtauthentisering>`__

`4.1.6 Groups & Permissions 22 <#groups-permissions>`__

`4.1 Tasks for Projects & Infrastructure: Beginner
22 <#tasks-for-projects-infrastructure-beginner>`__

`4.2 Projects & Infrastructure: Novice
22 <#projects-infrastructure-novice>`__

`4.2.7 Node config? 22 <#node-config>`__

`4.2.8 Deployment 23 <#deployment>`__

`4.2.9 Monitorering 23 <#monitorering>`__

`4.2.10 Arbeidsmetodikk 23 <#arbeidsmetodikk>`__

`4.2 Tasks for Projects & Infrastructure: Novice
24 <#tasks-for-projects-infrastructure-novice>`__

`4.3 Projects & Infrastructure: Intermediate
24 <#projects-infrastructure-intermediate>`__

`5.2.8 dev/CI/test/prod-noder 24 <#devcitestprod-noder>`__

`5.2.9 CI/CD/TDD? 24 <#cicdtdd>`__

`4.3.10 Workflow in Projects 24 <#workflow-in-projects>`__

`4.3 Tasks for Projects & Infrastructure: Intermediate
25 <#tasks-for-projects-infrastructure-intermediate>`__

`Epilogue 25 <#epilogue-3>`__

`5 Microservices 25 <#microservices>`__

`Introduction 25 <#introduction-4>`__

`5.1 Microservices: Beginner 25 <#microservices-beginner>`__

`5.1.1 What is a microservice? 25 <#what-is-a-microservice>`__

`5.1.2 Why use Microservices in Sesam?
26 <#why-use-microservices-in-sesam>`__

`5.1.3 How are Microservices used in Sesam?
26 <#how-are-microservices-used-in-sesam>`__

`5.1.4 Microservice hosting 26 <#microservice-hosting>`__

`5.1.5 Running a microservice in Sesam
26 <#running-a-microservice-in-sesam>`__

`5.1.6 Types of Microservices 26 <#types-of-microservices>`__

`5.1.7 Naming Convention 26 <#naming-convention-1>`__

`5.1 Tasks for Microservices: Beginner – Tasks
26 <#tasks-for-microservices-beginner-tasks>`__

`5.2 Microservices: Novice 26 <#microservices-novice>`__

`5.2.8 Interacting with a Microservice in Sesam
26 <#interacting-with-a-microservice-in-sesam>`__

`5.2.9 Microservice Development Prerequisites
27 <#microservice-development-prerequisites>`__

`5.2.10 Changing a Microservice 27 <#changing-a-microservice>`__

`5.2.11 Authentication with microservices
27 <#authentication-with-microservices>`__

`5.2.12 Sesam I/O 27 <#sesam-io>`__

`5.2.13 Using a Microservice as Input in Sesam
27 <#using-a-microservice-as-input-in-sesam>`__

`5.2.14 Looking inside an Input Microservice
27 <#looking-inside-an-input-microservice>`__

`5.2 Tasks for Microservices: Novice
28 <#tasks-for-microservices-novice>`__

`5.3 Microservices: Intermediate 28 <#microservices-intermediate>`__

`5.3.15 Using a Microservice as Output in Sesam
28 <#using-a-microservice-as-output-in-sesam>`__

`5.3.16 Looking inside an Output Microservice
28 <#looking-inside-an-output-microservice>`__

`5.3.17 Guidelines for Microservice Development
28 <#guidelines-for-microservice-development>`__

`5.3.18 Microservices and GitHub [VCS]
29 <#microservices-and-github-vcs>`__

`5.3.19 Optimizing a Microservice 29 <#optimizing-a-microservice>`__

`5.3.20 Microservice System types 29 <#microservice-system-types>`__

`5.3 Tasks for Microservices: Intermediate
29 <#tasks-for-microservices-intermediate>`__

`5.4 Microservices: Advanced 29 <#microservices-advanced>`__

`5.4.21 Testing 29 <#testing>`__

`5.4.22 Proxy Endpoint [Jonas] 30 <#proxy-endpoint-jonas>`__

`5.4.23 Chaining 30 <#chaining>`__

`5.4. Tasks for Microservices: Intermediate
30 <#tasks-for-microservices-intermediate-1>`__

`Epilogue 30 <#epilogue-4>`__

`6. Sesam in the Wild [WIP] 30 <#sesam-in-the-wild-wip>`__

`Introduction 30 <#introduction-5>`__

`Sesam in the Wild: Beginner 30 <#sesam-in-the-wild-beginner>`__

`6.1.1 Beginner topic 30 <#beginner-topic>`__

`6.1 Tasks for Sesam in the Wild: Beginner
30 <#tasks-for-sesam-in-the-wild-beginner>`__

`Sesam in the Wild: Novice 31 <#sesam-in-the-wild-novice>`__

`6.2.X: Novice topic 31 <#x-novice-topic>`__

`6.2 Tasks for Sesam in the Wild: Novice
31 <#tasks-for-sesam-in-the-wild-novice>`__

`Sesam in the Wild: Intermediate 31 <#sesam-in-the-wild-intermediate>`__

`6.3.X: Intermediate topic 31 <#x-intermediate-topic>`__

`6.3 Tasks for Sesam in the Wild: Intermediate
31 <#tasks-for-sesam-in-the-wild-intermediate>`__

`Sesam in the Wild: Advanced 31 <#sesam-in-the-wild-advanced>`__

`6.4.X: Advanced topic 31 <#x-advanced-topic>`__

`6.4 Tasks for Sesam in the Wild: Advanced
31 <#tasks-for-sesam-in-the-wild-advanced>`__

`Epilouge 31 <#epilouge>`__

`Appendix 31 <#appendix>`__

Architecture and Concepts
